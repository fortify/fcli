/*******************************************************************************
 * Copyright 2021, 2023 Open Text.
 *
 * The only warranties for products and services of Open Text 
 * and its affiliates and licensors ("Open Text") are as may 
 * be set forth in the express warranty statements accompanying 
 * such products and services. Nothing herein should be construed 
 * as constituting an additional warranty. Open Text shall not be 
 * liable for technical or editorial errors or omissions contained 
 * herein. The information contained herein is subject to change 
 * without notice.
 *******************************************************************************/
package com.fortify.cli.fod._common.rest.embed;

import java.util.Collection;
import java.util.stream.Collectors;
import java.util.stream.Stream;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.node.ObjectNode;

import kong.unirest.UnirestInstance;

/**
 * This class takes zero or more {@link IFoDEntityEmbedderSupplier} instances
 * as constructor argument(s), storing the {@link IFoDEntityEmbedder} instances
 * generated by these suppliers, to provide the {@link #transformRecord(UnirestInstance, JsonNode)}
 * method that embeds the requested data into a given record.
 *  
 * @author rsenden
 *
 */
public class FoDEmbedder {
    private final Collection<IFoDEntityEmbedder> embedders;
    
    public FoDEmbedder(IFoDEntityEmbedderSupplier... suppliers) {
        this.embedders = suppliers==null ? null : Stream.of(suppliers)
                .map(IFoDEntityEmbedderSupplier::createEntityEmbedder)
                .collect(Collectors.toList());
    }
    
    public JsonNode transformRecord(UnirestInstance unirest, JsonNode record) {
        if ( embedders!=null ) {
            if ( !(record instanceof ObjectNode) ) {
                throw new RuntimeException("Can't embed data in records of type "+record.getNodeType());
            }
            embedders.forEach(e->e.embed(unirest, (ObjectNode)record));
        }
        return record;
    }
}
