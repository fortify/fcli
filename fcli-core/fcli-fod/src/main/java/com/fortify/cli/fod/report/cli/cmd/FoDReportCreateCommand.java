/*******************************************************************************
 * Copyright 2021, 2023 Open Text.
 *
 * The only warranties for products and services of Open Text
 * and its affiliates and licensors ("Open Text") are as may
 * be set forth in the express warranty statements accompanying
 * such products and services. Nothing herein should be construed
 * as constituting an additional warranty. Open Text shall not be
 * liable for technical or editorial errors or omissions contained
 * herein. The information contained herein is subject to change
 * without notice.
 *******************************************************************************/
package com.fortify.cli.fod.report.cli.cmd;

import com.fasterxml.jackson.databind.JsonNode;
import com.fortify.cli.common.cli.util.EnvSuffix;
import com.fortify.cli.common.output.cli.mixin.OutputHelperMixins;
import com.fortify.cli.common.output.transform.IActionCommandResultSupplier;
import com.fortify.cli.common.output.transform.IRecordTransformer;
import com.fortify.cli.common.util.StringUtils;
import com.fortify.cli.fod._common.cli.mixin.FoDDelimiterMixin;
import com.fortify.cli.fod._common.output.cli.AbstractFoDJsonNodeOutputCommand;
import com.fortify.cli.fod.release.cli.mixin.FoDReleaseByQualifiedNameOrIdResolverMixin;
import com.fortify.cli.fod.release.helper.FoDReleaseDescriptor;
import com.fortify.cli.fod.report.cli.mixin.FoDReportTemplateByNameOrIdResolverMixin;
import com.fortify.cli.fod.report.helper.FoDReportCreateRequest;
import com.fortify.cli.fod.report.helper.FoDReportFormatType;
import com.fortify.cli.fod.report.helper.FoDReportHelper;
import kong.unirest.UnirestInstance;
import lombok.Getter;
import picocli.CommandLine.Command;
import picocli.CommandLine.Mixin;
import picocli.CommandLine.Option;
import picocli.CommandLine.Parameters;

@Command(name = OutputHelperMixins.Create.CMD_NAME)
public class FoDReportCreateCommand extends AbstractFoDJsonNodeOutputCommand implements IActionCommandResultSupplier {
    @Getter @Mixin private OutputHelperMixins.Create outputHelper;

    @Mixin private FoDDelimiterMixin delimiterMixin; // Is automatically injected in resolver mixins
    @Mixin private FoDReleaseByQualifiedNameOrIdResolverMixin.RequiredOption releaseResolver;

    @Mixin private FoDReportTemplateByNameOrIdResolverMixin.RequiredOption reportTemplateResolver;

    @EnvSuffix("NAME") @Parameters(index = "0", arity = "1", descriptionKey = "fcli.fod.report.create.name")
    protected String reportName;

    @Option(names = {"--format"}, required = true)
    protected FoDReportFormatType format;

    @Option(names = {"--notes"})
    protected String notes;

    @Override
    public JsonNode getJsonNode(UnirestInstance unirest) {
        FoDReleaseDescriptor releaseDescriptor = releaseResolver.getReleaseDescriptor(unirest);
        int reportTemplateId = Integer.parseInt(reportTemplateResolver.getReportTemplateId(unirest));

        FoDReportCreateRequest reportCreateRequest = FoDReportCreateRequest.builder()
                .applicationId(Integer.valueOf(releaseDescriptor.getApplicationId()))
                .releaseId(Integer.valueOf(releaseDescriptor.getReleaseId()))
                .reportTemplateTypeId(reportTemplateId)
                .reportName(reportName)
                .reportFormat(StringUtils.capitalize(format.name().toLowerCase()))
                .notes((notes == null || notes.isEmpty() ? "Generated by fcli" : notes))
                .build();

        return FoDReportHelper.createReport(unirest, reportCreateRequest).asJsonNode();
    }

    @Override
    public String getActionCommandResult() {
        return "CREATED";
    }

    @Override
    public boolean isSingular() {
        return true;
    }

}
