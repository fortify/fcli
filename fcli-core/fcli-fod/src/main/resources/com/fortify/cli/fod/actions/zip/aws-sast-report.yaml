# yaml-language-server: $schema=https://fortify.github.io/fcli/schemas/action/fcli-action-schema-dev.json

author: Fortify
usage:
  header: Generate a AWS Security Hub SAST report listing FoD SAST vulnerabilities. 
  description: |
    For information on how to create or update findings into AWS Security Hub, see 
    https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-findings-update-types.html

parameters:
  - name: report-file
    cliAliases: r
    description: "Optional report output file name (or 'stdout' / 'stderr'). Default value: aws-fortify-report.json"
    required: false
    defaultValue: aws-fortify-report.json
  - name: release
    cliAliases: rel
    description: "Required release id or <appName>:[<microserviceName>:]<releaseName>"
    type: release_single
  - name: aws-region
    description: 'Required AWS region. Default value: AWS_REGION environment variable.'
    required: true
    defaultValue: ${#env('AWS_REGION')}    
  - name: aws-account
    description: 'Required AWS account id. Default value: AWS_ACCOUNT_ID environment variable.'
    required: true
    defaultValue: ${#env('AWS_ACCOUNT_ID')}

defaults:
  requestTarget: fod

steps:
  - progress: Loading static scan summary
  - requests:
      - name: staticScanSummary
        uri:  /api/v3/scans/${parameters.release.currentStaticScanId}/summary
        if:   ${parameters.release.currentStaticScanId!=null}
  - progress: Processing issue data
  - requests:
    - name: issues
      uri: /api/v3/releases/${parameters.release.releaseId}/vulnerabilities?limit=50
      query:
        filters: scantype:Static
      pagingProgress:
        postPageProcess: Processed ${totalIssueCount?:0} of ${issues_raw.totalCount} issues
      forEach:
        name: issue
        embed:
          - name: details
            uri: /api/v3/releases/${parameters.release.releaseId}/vulnerabilities/${issue.vulnId}/details
          - name: recommendations
            uri: /api/v3/releases/${parameters.release.releaseId}/vulnerabilities/${issue.vulnId}/recommendations
        do:
          - append:
            - name: vulnerabilities
              valueTemplate: issues
  - write:
    - to: ${parameters['report-file']}
      valueTemplate: report
    - if: ${parameters.file!='stdout'}
      to: stdout
      value: |
        Report written to ${parameters['report-file']}

valueTemplates:
  - name: report
    contents:
      issues: ${vulnerabilities?:{}} 
     
  - name: issues
    contents:
      SchemaVersion: 2018-10-08
      Id: ${parameters.release.releaseId}-${issue.id}
      ProductArn: "arn:aws:securityhub:${parameters['aws-region']}:${parameters['aws-account']}:product/${parameters['aws-account']}/default"
      GeneratorId: "arn:aws:securityhub:${parameters['aws-region']}:${parameters['aws-account']}:product/${parameters['aws-account']}/default"
      ProductName: 'Fortify SAST'
      CompanyName: OpenText
      Types: "[ 'Software and Configuration Checks/Vulnerabilities/CVE' ]"
      CreatedAt: ${#formatDateTimewithZoneIdAsUTC("yyyy-MM-dd'T'HH:mm:ss.SSSSSS'Z'",parameters.release.staticScanDate?:'1970-01-01T00:00:00',parameters.release.serverZoneId)}
      UpdatedAt: ${#formatDateTimewithZoneIdAsUTC("yyyy-MM-dd'T'HH:mm:ss.SSSSSS'Z'",parameters.release.staticScanSummary?.completedDateTime?:'1970-01-01T00:00:00',parameters.release.serverZoneId)}
      severity: 
        Original: ${issue.severityString}
        Normalized: ${{'Critical':10.0,'High':8.9,'Medium':6.9,'Low':3.9}.get(issue.severityString)}
      Title: ${issue.category}
      Description: ${#abbreviate(#htmlToText(issue.details?.summary), 510)}
      Remediation:
        Recommendation:
          Text: ${#abbreviate(#htmlToText(issue.recommendations?.recommendations), 510)}
          Url: ${#fod.issueBrowserUrl(issue)}
      ProductFields:
        Product Name: 'Fortify SAST'
        'aws/securityhub/CompanyName': OpenText
        'aws/securityhub/ProductName': 'Fortify SAST'
      Resources:
        Type: Application
        Id: ${parameters.release.releaseId}-${issue.id}
        Partition: aws
        Region: ${parameters['aws-region']}
        details:
          Other:
            APPLICATION: ${parameters.release.releaseId}
            APPLICATION NAME: ${parameters.release.applicationName}
            APPLICATION VERSION: ${parameters.release.releaseName}
            PRIMARY LOCATION: ${issue.primaryLocationFull}
            LINE NUMBER: ${issue.lineNumber}
            INSTANCE ID: ${issue.instanceId}
      RecordState: ACTIVE