usage:
  header: Generate a BitBucket Code Insights report listing SSC SAST vulnerabilities. 
  description: |
    For information on how to import this report into BitBucket, see 
    https://support.atlassian.com/bitbucket-cloud/docs/code-insights/
    
defaults:
  requestTarget: ssc
  
parameters:
  - name: report-file
    cliAliases: r
    description: "Optional report output file name (or 'stdout' / 'stderr'). Default value: bb-fortify-report.json"
    required: false
    defaultValue: bb-fortify-report.json
  - name: annotations-file
    cliAliases: a
    description: "Optional annotations output file name (or 'stdout' / 'stderr'). Default value: bb-fortify-annotations.json"
    required: false
    defaultValue: bb-fortify-annotations.json
  - name: appversion
    cliAliases: av
    description: "Required application version id or <appName>:<versionName>"
    type: appversion_single
  - name: filterset
    cliAliases: fs
    description: "Filter set name or guid from which to load issue data. Default value: Default filter set for given application version"
    required: false
    type: filterset
  - name: limit
    cliAliases: l
    description: "By default, retrieve 200 issues at a time from SSC. You can adjust this limit to be more or less for performance."
    required: false
    defaultValue: "200"

steps:
  - progress: Loading latest static scan
  - requests:
    - name: artifacts
      uri:  /api/v1/projectVersions/${parameters.appversion.id}/artifacts
      type: paged
      query:
        embed: scans
      forEach:
        name: artifact
        breakIf: lastStaticScan!=null
        do:
          - set:
            - name: lastStaticScan
              value: ${artifact._embed.scans?.^[type=='SCA']}
  - progress: Loading issue counts
  - requests:
    - name: fpo_counts_sca
      uri:  /api/v1/projectVersions/${parameters.appversion.id}/issueGroups
      query:
        filter: ISSUE[11111111-1111-1111-1111-111111111151]:SCA
        groupingtype: 11111111-1111-1111-1111-111111111150
        filterset: ${parameters.filterset.guid}
  - requests:
    - name: fpo_counts_total
      uri:  /api/v1/projectVersions/${parameters.appversion.id}/issueGroups
      query:
        groupingtype: 11111111-1111-1111-1111-111111111150
        filterset: ${parameters.filterset.guid}      
  - progress: Processing issue data
  - requests:
    - name: issues
      uri: /api/v1/projectVersions/${parameters.appversion.id}/issues?limit=${parameters.limit}
      query:
        filter: ISSUE[11111111-1111-1111-1111-111111111151]:SCA
        filterset: ${parameters.filterset.guid}
      pagingProgress:
        postPageProcess: Processed ${totalIssueCount?:0} of ${issues_raw.count} issues
      forEach:
        name: issue
        embed:
          - name: details
            uri: /api/v1/issueDetails/${issue.id}
        do:
          - set:
            - name: annotations
              operation: append
  - write:
    - to: ${parameters['annotations-file']}
      value: ${annotations?:{}}
    - to: ${parameters['report-file']}
      valueTemplate: report
    - if: parameters['annotations-file']!='stdout' && parameters['report-file']!='stdout'
      to: stdout
      value: |
        Report written to ${parameters['report-file']}
        Annotations written to ${parameters['annotations-file']}

valueTemplates:
  - name: report
    contents:
      # uuid:
      title: Fortify Scan Report
      details: Fortify detected ${annotations?.size()?:0} static ${annotations?.size()==1 ? 'vulnerability':'vulnerabilities'}
      #external_id:
      reporter: Fortify Static Code Analyzer ${lastStaticScan?.engineVersion?:''}
      link: ${#ssc.appversionBrowserUrl(parameters.appversion)}
      # remote_link_enabled:
      logo_url: https://bitbucket.org/workspaces/fortifysoftware/avatar
      report_type: SECURITY
      result: 'PASSED'
      data:
        - type: TEXT
          title: Application Version
          value: ${parameters.appversion.project.name} - ${parameters.appversion.name}
        - type: DATE
          title: Last Static Scan
          value: ${#formatDateTime("yyyy-MM-dd'T'HH:mm:ss.SSSSSS'Z'", lastStaticScan?.uploadDate?:'1970-01-01T00:00:00')}
        - type: NUMBER
          title: Critical (SAST)
          value: ${fpo_counts_sca.^[id=='Critical']?.visibleCount?:0}
        - type: NUMBER
          title: Critical (Overall)
          value: ${fpo_counts_total.^[id=='Critical']?.visibleCount?:0}
        - type: NUMBER
          title: High (SAST)
          value: ${fpo_counts_sca.^[id=='High']?.visibleCount?:0}
        - type: NUMBER
          title: High (Overall)
          value: ${fpo_counts_total.^[id=='High']?.visibleCount?:0}
        - type: NUMBER
          title: Medium (SAST)
          value: ${fpo_counts_sca.^[id=='Medium']?.visibleCount?:0}
        - type: NUMBER
          title: Medium (Overall)
          value: ${fpo_counts_total.^[id=='Medium']?.visibleCount?:0}
        - type: NUMBER
          title: Low (SAST)
          value: ${fpo_counts_sca.^[id=='Low']?.visibleCount?:0}
        - type: NUMBER
          title: Low (Overall)
          value: ${fpo_counts_total.^[id=='Low']?.visibleCount?:0}

  - name: annotations
    contents:
      external_id: FTFY-${issue.id}
      # uuid:
      annotation_type: VULNERABILITY
      path: ${issue.fullFileName}
      line: ${issue.lineNumber==0?1:issue.lineNumber}
      summary: ${issue.issueName}
      details: ${issue.details?.brief}
      # result: PASSED|FAILED|SKIPPED|IGNORED
      severity: ${issue.friority.toUpperCase()} 
      link: ${#ssc.issueBrowserUrl(issue,parameters.filterset)}
      # created_on:
      # updated_on:
