usage:
  header: Generate a GitLab SAST report listing SSC SAST vulnerabilities. 
  description: |
    For information on how to import this report into GitLab, see 
    https://docs.gitlab.com/ee/ci/yaml/artifacts_reports.html#artifactsreportssast
  
defaults:
  requestTarget: ssc
  
parameters:
  - name: file
    cliAliases: f
    description: "Optional output file name (or 'stdout' / 'stderr'). Default value: gl-fortify-sast.json"
    required: false
    defaultValue: gl-fortify-sast.json
  - name: appversion
    cliAliases: av
    description: "Required application version id or <appName>:<versionName>"
    type: appversion_single
  - name: filterset
    cliAliases: fs
    description: "Filter set name or guid from which to load issue data. Default value: Default filter set for given application version"
    required: false
    type: filterset
  
steps:
  - progress: Loading latest static scan
  - requests:
    - name: artifacts
      uri:  /api/v1/projectVersions/${parameters.appversion.id}/artifacts
      type: paged
      query:
        embed: scans
      forEach:
        name: artifact
        breakIf: lastStaticScan!=null
        do:
          - set:
            - name: lastStaticScan
              value: ${artifact._embed.scans?.^[type=='SCA']}
  - progress: Processing issue data
  - requests:
    - name: issues
      uri: /api/v1/projectVersions/${parameters.appversion.id}/issues?limit=100
      query:
        filter: ISSUE[11111111-1111-1111-1111-111111111151]:SCA
        filterset: ${parameters.filterset.guid}
      pagingProgress:
        postPageProcess: Processed ${totalIssueCount?:0} of ${issues_raw.count} issues
      forEach:
        name: issue
        embed:
          - name: details
            uri: /api/v1/issueDetails/${issue.id}
        do:
          - set:
            - name: vulnerabilities
              operation: append
  - write:
    - to: ${parameters.file}
      valueTemplate: gitlab-sast-report
    - if: parameters.file!='stdout'
      to: stdout
      value: |
        Output written to ${parameters.file}


valueTemplates:
  - name: gitlab-sast-report
    contents:
      schema: https://gitlab.com/gitlab-org/security-products/security-report-schemas/-/raw/v15.0.0/dist/sast-report-format.json
      version: 15.0.0
      scan:
        start_time: ${#formatDateTime("yyyy-MM-dd'T'HH:mm:ss", lastStaticScan?.uploadDate?:'1970-01-01T00:00:00')}
        end_time: ${#formatDateTime("yyyy-MM-dd'T'HH:mm:ss", lastStaticScan?.uploadDate?:'1970-01-01T00:00:00')}
        status: success
        type: sast
        analyzer:
          id: fortify-sca
          name: Fortify SCA
          url: https://www.microfocus.com/en-us/products/application-security-testing/overview
          version: SCA ${lastStaticScan?.engineVersion?:'version unknown'}
          vendor: 
            name: Fortify
        scanner:
          id: fortify-sca
          name: Fortify SCA
          url: https://www.microfocus.com/en-us/products/application-security-testing/overview
          version: SCA ${lastStaticScan?.engineVersion?:'version unknown'}
          vendor:
            name: Fortify
      vulnerabilities: ${vulnerabilities?:{}} 
  - name: vulnerabilities
    contents:
      id: ${issue.issueInstanceId}
      category: sast
      name: ${issue.issueName}
      message: ${issue.issueName}
      description: ${#abbreviate(#htmlToText(issue.details?.brief), 15000)}
      cve: 'N/A'
      severity: ${issue.friority}
      confidence: ${(issue.friority matches "(Critical|Medium)") ? "High":"Low"}
      solution: ${#abbreviate(#htmlToText(issue.details?.detail)+'\n\n'+#htmlToText(issue.details?.recommendation), 7000)}
      scanner:
        id: fortify-sca
        name: Fortify SCA
      identifiers:
        - name:  "Instance id: ${issue.issueInstanceId}"
          type:  issueInstanceId
          value: ${issue.issueInstanceId}
          url:   ${#ssc.issueBrowserUrl(issue,parameters.filterset)}
      links:
        - name: Additional issue details, including analysis trace, in Software Security Center
          url:  ${#ssc.issueBrowserUrl(issue,parameters.filterset)}
        - name: SecureCodeWarrior Training
          url:  ${issue.details?.appSecTrainingUrl}
      location:
        file:       ${issue.fullFileName}
        start_line: ${issue.lineNumber}