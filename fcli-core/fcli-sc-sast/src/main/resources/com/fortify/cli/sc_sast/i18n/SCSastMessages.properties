# Used to 'productize' some descriptions defined in FortifyCLIMessages.properties
product=ScanCentral SAST
default-connect-timeout = 10 seconds
default-socket-timeout = 60 seconds

# Make sure none of the commands inherit usage header or description of the top-level fcli command
# Note that we define these as usage.* whereas our parent bundle defines fcli.usage.* (with fcli prefix).
# For some reason, overriding fcli.usage.* doesn't work.
usage.header = 
usage.description = 

# fcli sc-sast
fcli.sc-sast.usage.header = Interact with Fortify ScanCentral SAST (SC-SAST).
fcli.sc-dast.usage.description.0 = The commands in this module allow for interacting with \
  Fortify ScanCentral SAST (SC-SAST). This includes functionality like submitting and \
  managing SAST scan requests and results.  
fcli.sc-dast.usage.description.1 = %nBefore being able to interact with ScanCentral SAST, \
  a session will need to be created by passing SSC URL and credentials to the 'session login' \
  command in this module. As a best practice, 'session logout' should be run to terminate the \
  session when there are no more activities to be performed.  

# Common descriptions
delim = Change the default delimiter character when using options that accept \
  "application:version" as an argument or parameter. 
fcli.ssc.appversion.resolver.nameOrId = Application version id or <application>:<version> name.

# fcli sc-sast session
ssc-user.0 = SSC user name.
ssc-user.1 = Environment variables:%n \
  ${fcli.env.default.prefix}_SSC_USER: Shared with SSC/SC DAST%n \
  ${fcli.env.default.prefix}_SC_SAST_SSC_USER: Only SC SAST commands
ssc-password.0 = SSC password.
ssc-password.1 = Environment variables:%n \
  ${fcli.env.default.prefix}_SSC_PASSWORD: Shared with SSC/SC DAST%n \
  ${fcli.env.default.prefix}_SC_SAST_SSC_PASSWORD: Only SC SAST commands
ssc-ci-token.0 = SSC CIToken in either encoded (REST) or decoded (application) format.
ssc-ci-token.1 = Environment variables:%n \
  ${fcli.env.default.prefix}_SSC_CI_TOKEN: Shared with SSC/SC DAST%n \
  ${fcli.env.default.prefix}_SC_SAST_SSC_CI_TOKEN: Only SC SAST commands
client-auth-token.0 = ScanCentral SAST client_auth_token (shared secret).
client-auth-token.1 = This token must match the client_auth_token property in ScanCentral SAST \ 
  Controller config.properties file. This is @|bold,underline not|@ an SSC token.
client-auth-token.2 = Environment variables:%n \
  ${fcli.env.default.prefix}_SC_SAST_CLIENT_AUTH_TOKEN
  

# fcli sc-sast session
fcli.sc-sast.session.usage.header = Manage ScanCentral SAST sessions (start here).
fcli.sc-sast.session.usage.description = The session commands allow for managing one or more \
  ScanCentral SAST sessions used to connect to a particular SSC/ScanCentral SAST environment \
  with particular credentials. Potentially you can have multiple open ScanCentral SAST sessions, \
  for example connecting to different SSC/ScanCentral SAST environments like DEV and PROD, \
  or connecting to the same SSC/ScanCentral SAST instance but with different credentials.
  
  # fcli sc-sast session login
fcli.sc-sast.session.login.usage.header = Create a session for interacting with ScanCentral SAST.
fcli.sc-sast.session.login.usage.description.0 = This command stores the SSC and ScanCentral SAST API \
  URL and authentication token in an encrypted session file in the fcli state data folder, for use \
  by other 'fcli sc-sast' commands to connect to the specified SSC/ScanCentral SAST instance. Option \
  values may be passed on the command line or specified through environment variables (common for \
  CI/CD pipeline use) as listed below.
fcli.sc-sast.session.login.usage.description.1 = %nWhen logging in with username and password, this \
  command will connect to SSC to generate a CIToken; the user password is not stored by fcli. When \
  logging in with a pre-generated CIToken, this token will be stored as-is. Note that due to SSC \
  limitations, fcli cannot determine when the token will expire.
fcli.sc-sast.session.login.usage.description.2 = %nFor interactive use, you may choose to keep the session \
  open until it expires. For CI/CD integrations and other automations, you should always issue a \
  logout command once work is complete. On shared/non-containerized systems, consider setting \
  FCLI_STATE_DIR or FCLI_DATA_DIR environment variables to prevent unexpected interactions between \
  different pipelines.
fcli.sc-sast.session.login.expire-in = Specify for how long the session should remain active, for example \
  1h (1 hour) or 1d (1 day).
fcli.sc-sast.session.login.ssc-url.0 = SSC URL.
fcli.sc-sast.session.login.ssc-url.1 = Environment variables:%n \
  ${fcli.env.default.prefix}_SSC_URL: Shared with SSC/SC DAST%n \
  ${fcli.env.default.prefix}_SC_SAST_SSC_URL: Only SC SAST commands
  
# fcli sc-sast session logout
fcli.sc-sast.session.logout.usage.header = Terminate ScanCentral SAST session.
fcli.sc-sast.session.logout.usage.description = This command terminates a ScanCentral SAST session \
  previously created through the 'login' command. This command will try to revoke the token passed \
  to or generated by the 'login' command (unless the --no-revoke-token option is specified), and \
  removes the session data from the fcli state data directory. 
fcli.sc-sast.session.logout.no-revoke-token = Don't revoke the token passed to or generated by the 'login' \
  command. If user name and password were specified during login, it is recommended to have the 'logout' \
  command revoke this token, to avoid exceeding SSCs maximum token limit. Note that due to SSC limitations, \
  user credentials will need to be provided to allow for token revocation. If a pre-generated token was \
  specified during login, usually you'll want to pass this option to avoid the pre-generated token from \
  being revoked.

# fcli sc-sast session list
fcli.sc-sast.session.list.usage.header = List active and expired ScanCentral SAST sessions.
fcli.sc-sast.session.list.usage.description.0 = This commands lists all ScanCentral SAST sessions created through the `login` \
  command, as long as they haven't been explicitly terminated through the 'logout' command. %n
fcli.sc-sast.session.list.usage.description.1 = For sessions created using user name and password, the output \
  of this command will show session expiry date and status, based on the data provided by SSC at the time \
  the login command was issued. Any changes to the generated token will not be reflected in the output of \
  this command. Even if a session is no longer valid because the generated token was revoked (through SSC \
  UI or 'fcli ssc access-control revoke-token' command), the output of this command may still show the session as not having \
  expired. Similarly, any changes to token validity will not be reflected in the output of this command. %n
fcli.sc-sast.session.list.usage.description.2 = For sessions created using a pre-generated token, fcli cannot \
  display session expiration date or status, as SSC doesn't allow for obtaining this information.
  
# fcli sc-sast scan
fcli.sc-sast.scan.usage.header = Manage ScanCentral SAST scans.
fcli.sc-sast.scan.cancel.usage.header = Cancel a previously submitted scan request.
fcli.sc-sast.scan.start.usage.header = Start a SAST scan.
fcli.sc-sast.scan.start.mbs.heading = Options for scanning an MBS file:%n
fcli.sc-sast.scan.start.package.heading = Options for scanning a package file:%n
fcli.sc-sast.scan.start.mbs-file = MBS file to scan.
fcli.sc-sast.scan.start.package-file = Package file to scan.
fcli.sc-sast.scan.start.notify = Email address to which to send a scan completion notification.
fcli.sc-sast.scan.start.sensor-version = Version of the sensor on which the package should be scanned. Officially, you should select the same sensor version as the version of the ScanCentral Client used to create the package.
fcli.sc-sast.scan.start.publish-to = Publish scan results to the given SSC application version once the scan has completed.
fcli.sc-sast.scan.status.usage.header = Get status for a previously submitted scan request.
fcli.sc-sast.scan.wait-for.usage.header = Wait for one or more scans to reach or exit specified scan statuses.
fcli.sc-sast.scan.wait-for.usage.description.0 = Although this command offers a lot of options to cover many \
  different use cases, you can simply pass a scan id (possibly stored using --store on the 'scan start' \
  command) to wait until either the scan has been fully processed on SSC (if --publish-to was specified on the \
  'scan start' command and ScanCentral Controller version > 22.1), until the scan has been published to SSC \
  (if --publish-to was specified on the 'scan start' command and ScanCentral Controller version <= 22.1), or \
  until the scan was completed (if --publish-to was not specified on the 'scan start' command).
fcli.sc-sast.scan.wait-for.usage.description.1 = %nThe following scan/publish states are currently known by fcli:
fcli.sc-sast.scan.wait-for.usage.description.2 = ${fcli.sc-sast.scan.jobStates:-See fcli help output}
fcli.sc-sast.scan.wait-for.usage.description.3 = %nThe following SSC artifact processing states are currently known by fcli:
fcli.sc-sast.scan.wait-for.usage.description.4 = ${fcli.sc-sast.scan.jobArtifactStates:-See fcli help output}
fcli.sc-sast.scan.wait-for.until=Wait until either any or all scans match. If neither --until or --while are specified, default is to wait until all scans match.
fcli.sc-sast.scan.wait-for.while=Wait while either any or all scans match.
fcli.sc-sast.scan.wait-for.any-scan-state=One or more scan states against which to match the given scans.
fcli.sc-sast.scan.wait-for.any-publish-state=One or more scan publishing states against which to match the given scans.
fcli.sc-sast.scan.wait-for.any-ssc-state=One or more SSC artifact processing states against which to match the given scans.
fcli.sc-sast.scan-job.resolver.jobToken = Scan job token.

# fcli sc-sast sensor
fcli.sc-sast.sensor.usage.header = Manage ScanCentral SAST sensors
fcli.sc-sast.sensor.list.usage.header = List ScanCentral SAST sensors
fcli.sc-sast.sensor.list.usage.description = This command lists sensor information for all \
  available SanCentral SAST sensors. It calls the SSC API and as such requires an active SSC session.
  
# fcli sc-sast rest
fcli.sc-sast.rest.usage.header = Interact with ScanCentral SAST Controller REST API endpoints.
fcli.sc-sast.rest.usage.description = These commands allow for direct interaction with ScanCentral SAST \
  Controller REST API endpoints, somewhat similar to using 'curl' but benefiting from standard fcli \
  functionality like session management (no need to manually specify Authorization header), rich output \
  formatting options, and query functionality.
fcli.sc-sast.rest.call.usage.header = Call an individual ScanCentral SAST Controller REST API endpoint. 
fcli.sc-sast.rest.call.no-paging = This option currently has no effect for ScanCentral SAST.
fcli.sc-sast.rest.call.no-transform = This option currently has no effect for ScanCentral SAST.
fcli.sc-sast.rest.call.transform = This option allows for performing custom transformations on the response \
  data based on a Spring Expression Language (SpEL) expression. For example, this allows for retrieving \
  data from sub-properties, or using project selection/projection. Note that the expression operates on \
  the raw response, as if --no-transform was specified before evaluating the expression.
  
#################################################################################################################
# The following section lists human-readable header names used by table and tree output formats;
# values may be internationalized. These messages may be prefixed with full or partial command
# prefix. Closest match wins if there are multiple definitions for the same column name, allowing
# subcommands to override header names defined on parent commands
#################################################################################################################
fcli.sc-sast.scan.output.header.sscArtifactState = Ssc processing state
fcli.sc-sast.sensor.output.header.cloudPoolName = Pool name
fcli.sc-sast.sensor.output.header.workerStartTime = Sensor start time



#################################################################################################################
# The following are technical properties that shouldn't be internationalized ####################################
#################################################################################################################

# Property default values that are usually set when running fcli, but which may not be available when 
# generating AsciiDoc man-pages.
fcli.env.default.prefix=FCLI_DEFAULT

# Table output columns configuration
fcli.sc-sast.session.output.table.options = name,type,url,created,expires,expired
fcli.sc-sast.scan.output.table.options = jobToken,hasFiles,scanState,publishState,sscArtifactState,endpointVersion
fcli.sc-sast.sensor.output.table.options = hostName,state,cloudPool?.name,ipAddress,scaVersion,lastSeen,workerStartTime
