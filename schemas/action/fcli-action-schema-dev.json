{
  "$schema" : "https://json-schema.org/draft/2020-12/schema",
  "$defs" : {
    "ActionStep" : {
      "type" : "object",
      "properties" : {
        "append" : {
          "description" : "Optional list: Append a data value for use in subsequent steps.",
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "if" : {
                "format" : "spelTemplateExpression",
                "type" : [ "boolean", "integer", "string", "number" ],
                "description" : "Optional SpEL template expression: Only execute this step if the given if-expression evaluates to 'true'"
              },
              "name" : {
                "type" : "string",
                "description" : "Required string: Name to assign to the outcome of this operation. Can be referenced in subsequent steps using ${[name]}."
              },
              "property" : {
                "format" : "spelTemplateExpression",
                "type" : [ "boolean", "integer", "string", "number" ],
                "description" : "Optional SpEL template expression: Property name to be added or updated in the data object specified by 'name'. If specified, 'name' is considered to be an object, otherwise 'name' is considered to be an array."
              },
              "value" : {
                "format" : "spelTemplateExpression",
                "type" : [ "boolean", "integer", "string", "number" ],
                "description" : "Required SpEL template expression if 'valueTemplate' is not specified: Value to be assigned or appended to the given name."
              },
              "valueTemplate" : {
                "type" : "string",
                "description" : "Required string if 'value' is not specified: Name of a value template to be evaluated, assigning or appending the outcome of the value template to the given set/append name."
              }
            },
            "required" : [ "name" ],
            "additionalProperties" : false
          }
        },
        "check" : {
          "description" : "Optional list: Mostly used for security policy and similar actions to define PASS/FAIL criteria. Upon action termination, check results will be written to console and return a non-zero exit code if the outcome of on or more checks was FAIL.",
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "displayName" : {
                "type" : "string",
                "description" : "Required string: Display name of this check, to be displayed in PASS/FAIL messages."
              },
              "failIf" : {
                "format" : "spelTemplateExpression",
                "type" : [ "boolean", "integer", "string", "number" ],
                "description" : "Required SpEL template expression if 'passIf' not specified: The outcome of this check will be 'FAIL' if the given expression evaluates to 'true', outcome will be 'PASS' otherwise."
              },
              "if" : {
                "format" : "spelTemplateExpression",
                "type" : [ "boolean", "integer", "string", "number" ],
                "description" : "Optional SpEL template expression: Only execute this step if the given if-expression evaluates to 'true'"
              },
              "ifSkipped" : {
                "type" : "string",
                "enum" : [ "FAIL", "PASS", "SKIP", "HIDE" ],
                "description" : "Optional enum value: Define the check result in case the check is being skipped due to conditional execution or no records to be processed in forEach blocks."
              },
              "passIf" : {
                "format" : "spelTemplateExpression",
                "type" : [ "boolean", "integer", "string", "number" ],
                "description" : "Required SpEL template expression if 'failIf' not specified: The outcome of this check will be 'SUCCESS' if the given expression evaluates to 'true', outcome will be 'FAIL' otherwise."
              }
            },
            "required" : [ "displayName" ],
            "additionalProperties" : false
          }
        },
        "debug" : {
          "format" : "spelTemplateExpression",
          "type" : [ "boolean", "integer", "string", "number" ],
          "description" : "Optional SpEL template expression: Write a debug message to log file (if enabled)."
        },
        "exit" : {
          "format" : "spelTemplateExpression",
          "type" : [ "boolean", "integer", "string", "number" ],
          "description" : "OptionalSpEL template expression: Terminate action execution and return the given exit code."
        },
        "fcli" : {
          "description" : "Optional list: Execute one or more fcli commands. For now, only fcli commands that support the standard output options (--output/--store/--to-file) may be used, allowing the JSON output of those commands to be used in subsequent or nested steps. Any console output is suppressed, and any non-zero exit codes will produce an error.",
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "args" : {
                "format" : "spelTemplateExpression",
                "type" : [ "boolean", "integer", "string", "number" ],
                "description" : "Required SpEL template expression: Arguments to pass to the fcli command, for example 'ssc appversion list --embed=attrValuesByName'."
              },
              "forEach" : {
                "type" : "object",
                "properties" : {
                  "breakIf" : {
                    "format" : "spelTemplateExpression",
                    "type" : [ "boolean", "integer", "string", "number" ],
                    "description" : "Optional SpEL template expression: Stop processing any further records if the breakIf expression evaluates to 'true'."
                  },
                  "do" : {
                    "description" : "Required list: Steps to be executed for each individual record.",
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/$defs/ActionStep"
                    }
                  },
                  "if" : {
                    "format" : "spelTemplateExpression",
                    "type" : [ "boolean", "integer", "string", "number" ],
                    "description" : "Optional SpEL template expression: Only execute this step if the given if-expression evaluates to 'true'"
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Required string: Name to assign to each individual record being processed. Can be referenced in other forEach properties and nested steps using ${[name]}."
                  }
                },
                "required" : [ "do", "name" ],
                "additionalProperties" : false,
                "description" : "Optional object: Steps to be executed for each individual record generated by the given fcli invocation."
              },
              "if" : {
                "format" : "spelTemplateExpression",
                "type" : [ "boolean", "integer", "string", "number" ],
                "description" : "Optional SpEL template expression: Only execute this step if the given if-expression evaluates to 'true'"
              },
              "name" : {
                "type" : "string",
                "description" : "Optional string: Name to assign to the outcome of this fcli invocation. Can be referenced in subsequent steps using ${[name]}."
              }
            },
            "required" : [ "args" ],
            "additionalProperties" : false
          }
        },
        "forEach" : {
          "type" : "object",
          "properties" : {
            "breakIf" : {
              "format" : "spelTemplateExpression",
              "type" : [ "boolean", "integer", "string", "number" ],
              "description" : "Optional SpEL template expression: Stop processing any further records if the breakIf expression evaluates to 'true'."
            },
            "do" : {
              "description" : "Required list: Steps to be executed for each individual record.",
              "type" : "array",
              "items" : {
                "$ref" : "#/$defs/ActionStep"
              }
            },
            "if" : {
              "format" : "spelTemplateExpression",
              "type" : [ "boolean", "integer", "string", "number" ],
              "description" : "Optional SpEL template expression: Only execute this step if the given if-expression evaluates to 'true'"
            },
            "name" : {
              "type" : "string",
              "description" : "Required string: Name to assign to each individual record being processed. Can be referenced in other forEach properties and nested steps using ${[name]}."
            },
            "processor" : {
              "format" : "spelTemplateExpression",
              "type" : [ "boolean", "integer", "string", "number" ],
              "description" : "Required SpEL template expression if 'values' not specified: Reference to a processor that generates JSON records and executes the given steps for each record. For now, the only available processor is ${#ssc.ruleDescriptionsProcessor(parameters.appversion.id)} for processing rule descriptions from the current state FPR file, used by some built-in actions."
            },
            "values" : {
              "format" : "spelTemplateExpression",
              "type" : [ "boolean", "integer", "string", "number" ],
              "description" : "Required SpEL template expression if 'processor' not specified: Array of values to be iterated over."
            }
          },
          "required" : [ "do", "name" ],
          "additionalProperties" : false,
          "description" : "Optional object: Iterate over a given array of values."
        },
        "if" : {
          "format" : "spelTemplateExpression",
          "type" : [ "boolean", "integer", "string", "number" ],
          "description" : "Optional SpEL template expression: Only execute this step if the given if-expression evaluates to 'true'"
        },
        "progress" : {
          "format" : "spelTemplateExpression",
          "type" : [ "boolean", "integer", "string", "number" ],
          "description" : "Optional SpEL template expression: Write a progress message."
        },
        "requests" : {
          "description" : "Optional list: Execute one or more REST requests.",
          "type" : "array",
          "items" : {
            "$ref" : "#/$defs/ActionStepRequest"
          }
        },
        "set" : {
          "description" : "Optional list: Set a data value for use in subsequent steps.",
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "if" : {
                "format" : "spelTemplateExpression",
                "type" : [ "boolean", "integer", "string", "number" ],
                "description" : "Optional SpEL template expression: Only execute this step if the given if-expression evaluates to 'true'"
              },
              "name" : {
                "type" : "string",
                "description" : "Required string: Name to assign to the outcome of this operation. Can be referenced in subsequent steps using ${[name]}."
              },
              "value" : {
                "format" : "spelTemplateExpression",
                "type" : [ "boolean", "integer", "string", "number" ],
                "description" : "Required SpEL template expression if 'valueTemplate' is not specified: Value to be assigned or appended to the given name."
              },
              "valueTemplate" : {
                "type" : "string",
                "description" : "Required string if 'value' is not specified: Name of a value template to be evaluated, assigning or appending the outcome of the value template to the given set/append name."
              }
            },
            "required" : [ "name" ],
            "additionalProperties" : false
          }
        },
        "steps" : {
          "description" : "Optional list: Sub-steps to be executed; useful for grouping or conditional execution of multiple steps.",
          "type" : "array",
          "items" : {
            "$ref" : "#/$defs/ActionStep"
          }
        },
        "throw" : {
          "format" : "spelTemplateExpression",
          "type" : [ "boolean", "integer", "string", "number" ],
          "description" : "Optional SpEL template expression: Throw an exception, thereby terminating action execution."
        },
        "unset" : {
          "description" : "Optional list: Unset a data value for use in subsequent steps.",
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "if" : {
                "format" : "spelTemplateExpression",
                "type" : [ "boolean", "integer", "string", "number" ],
                "description" : "Optional SpEL template expression: Only execute this step if the given if-expression evaluates to 'true'"
              },
              "name" : {
                "type" : "string",
                "description" : "Required string: Name to unset."
              }
            },
            "required" : [ "name" ],
            "additionalProperties" : false
          }
        },
        "warn" : {
          "format" : "spelTemplateExpression",
          "type" : [ "boolean", "integer", "string", "number" ],
          "description" : "Optional SpEL template expression: Write a warning message to console and log file (if enabled). Note that warning messages will be shown on console only after all action steps have been executed, to not interfere with progress messages."
        },
        "write" : {
          "description" : "Optional list: Write data to a file, stdout, or stderr. Note that output to stdout and stderr will be deferred until action termination as to not interfere with progress messages.",
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "if" : {
                "format" : "spelTemplateExpression",
                "type" : [ "boolean", "integer", "string", "number" ],
                "description" : "Optional SpEL template expression: Only execute this step if the given if-expression evaluates to 'true'"
              },
              "to" : {
                "format" : "spelTemplateExpression",
                "type" : [ "boolean", "integer", "string", "number" ],
                "description" : "Required SpEL template expression: Specify where to write the given data; either 'stdout', 'stderr' or a filename."
              },
              "value" : {
                "format" : "spelTemplateExpression",
                "type" : [ "boolean", "integer", "string", "number" ],
                "description" : "Required SpEL template expression if 'valueTemplate' is not specified: Value to be written to the given output."
              },
              "valueTemplate" : {
                "type" : "string",
                "description" : "Required string if 'value' is not specified: Name of a value template to be evaluated, writing the outcome of the value template to the given output."
              }
            },
            "required" : [ "to" ],
            "additionalProperties" : false
          }
        }
      },
      "additionalProperties" : false
    },
    "ActionStepRequest" : {
      "type" : "object",
      "properties" : {
        "body" : {
          "format" : "spelTemplateExpression",
          "type" : [ "boolean", "integer", "string", "number" ],
          "description" : "Optional SpEL template expression: Request body to send with the REST request."
        },
        "forEach" : {
          "type" : "object",
          "properties" : {
            "breakIf" : {
              "format" : "spelTemplateExpression",
              "type" : [ "boolean", "integer", "string", "number" ],
              "description" : "Optional SpEL template expression: Stop processing any further records if the breakIf expression evaluates to 'true'."
            },
            "do" : {
              "description" : "Required list: Steps to be executed for each individual record.",
              "type" : "array",
              "items" : {
                "$ref" : "#/$defs/ActionStep"
              }
            },
            "embed" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/$defs/ActionStepRequest"
              }
            },
            "if" : {
              "format" : "spelTemplateExpression",
              "type" : [ "boolean", "integer", "string", "number" ],
              "description" : "Optional SpEL template expression: Only execute this step if the given if-expression evaluates to 'true'"
            },
            "name" : {
              "type" : "string",
              "description" : "Required string: Name to assign to each individual record being processed. Can be referenced in other forEach properties and nested steps using ${[name]}."
            }
          },
          "required" : [ "do", "name" ],
          "additionalProperties" : false,
          "description" : "Optional object: Steps to be executed for each record in the REST response."
        },
        "if" : {
          "format" : "spelTemplateExpression",
          "type" : [ "boolean", "integer", "string", "number" ],
          "description" : "Optional SpEL template expression: Only execute this step if the given if-expression evaluates to 'true'"
        },
        "method" : {
          "type" : "string",
          "description" : "Optional string: HTTP method like GET or POST to use for this REST request. Defaults to 'GET'."
        },
        "name" : {
          "type" : "string",
          "description" : "Required string: Name to assign to the JSON response for this REST request. Can be referenced in subsequent steps using ${[name]} to access transformed data (if applicable) or ${[name]_raw} to access raw, untransformed data."
        },
        "onFail" : {
          "description" : "Optional list: Steps to be executed on request failure. If not specified, an exception will be thrown on request failure.",
          "type" : "array",
          "items" : {
            "$ref" : "#/$defs/ActionStep"
          }
        },
        "onResponse" : {
          "description" : "Optional list: Steps to be executed on the overall response before executing any 'forEach' steps.",
          "type" : "array",
          "items" : {
            "$ref" : "#/$defs/ActionStep"
          }
        },
        "pagingProgress" : {
          "type" : "object",
          "properties" : {
            "postPageLoad" : {
              "format" : "spelTemplateExpression",
              "type" : [ "boolean", "integer", "string", "number" ]
            },
            "postPageProcess" : {
              "format" : "spelTemplateExpression",
              "type" : [ "boolean", "integer", "string", "number" ]
            },
            "prePageLoad" : {
              "format" : "spelTemplateExpression",
              "type" : [ "boolean", "integer", "string", "number" ]
            }
          },
          "additionalProperties" : false,
          "description" : "Optional object: Progress messages for various stages of request/response processing."
        },
        "query" : {
          "$ref" : "#/$defs/Map(String,TemplateExpression)",
          "description" : "Optional map(string,SpEL template expression): Map of query parameters and corresponding values, for example 'someParam: ${[name].[property]}'."
        },
        "target" : {
          "type" : "string",
          "description" : "Required string if no default target has been configured through defaults.requestTarget: Target on which to execute the REST request. This may be 'fod' (for actions in FoD module), 'ssc' (for actions in SSC module), or a custom request target as configured through 'addRequestTargets'."
        },
        "type" : {
          "type" : "string",
          "enum" : [ "simple", "paged" ],
          "description" : "Optional enum value: Flag to indicate whether this is a 'paged' or 'simple' request. If set to 'paged' (only available for 'fod' and 'ssc' request targets for now), all pages will be automatically processed. Defaults to 'simple'."
        },
        "uri" : {
          "format" : "spelTemplateExpression",
          "type" : [ "boolean", "integer", "string", "number" ],
          "description" : "Required SpEL template expression: Unqualified REST URI, like '/api/v3/some/api/${parameters.[name].id}' to be appended to the base URL as configured for the given 'target'."
        }
      },
      "required" : [ "name", "uri" ],
      "additionalProperties" : false
    },
    "Map(String,TemplateExpression)" : {
      "type" : "object",
      "additionalProperties" : {
        "format" : "spelTemplateExpression",
        "type" : [ "boolean", "integer", "string", "number" ]
      }
    }
  },
  "type" : "object",
  "properties" : {
    "$schema" : {
      "type" : "string",
      "description" : "Required string unless `yaml-language-server` comment with schema location is provided: Schema location."
    },
    "addRequestTargets" : {
      "description" : "Optional list: Add target URLs and related properties for REST requests.",
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "baseUrl" : {
            "format" : "spelTemplateExpression",
            "type" : [ "boolean", "integer", "string", "number" ],
            "description" : "Required SpEL template expression: Base URL to use for REST requests to this request target."
          },
          "headers" : {
            "$ref" : "#/$defs/Map(String,TemplateExpression)",
            "description" : "Optional map(string,SpEL template expression): Headers to be sent to this request target on every request."
          },
          "name" : {
            "type" : "string",
            "description" : "Required string: Request target name, referenceable from 'request' steps."
          }
        },
        "required" : [ "baseUrl", "name" ],
        "additionalProperties" : false
      }
    },
    "author" : {
      "type" : "string",
      "description" : "Required string: Author of this action."
    },
    "defaults" : {
      "type" : "object",
      "properties" : {
        "requestTarget" : {
          "type" : "string",
          "description" : "Optional string: Default request target to use for REST requests."
        }
      },
      "additionalProperties" : false,
      "description" : "Optional object: Default values for some specific properties. Currently only used to set a default request target."
    },
    "parameters" : {
      "description" : "Optional list: Action parameters.",
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "cliAliases" : {
            "type" : "string",
            "description" : "Optional string: Comma-separated CLI option aliases. This will allow the action to accept CLI options named `--[alias]` or `-[alias]` for single-letter aliases. Aliases cannot be referenced in SpEL expressions."
          },
          "defaultValue" : {
            "format" : "spelTemplateExpression",
            "type" : [ "boolean", "integer", "string", "number" ],
            "description" : "Optional SpEL template expression: Default value for this action parameter if no value is specified by the user."
          },
          "description" : {
            "type" : "string",
            "description" : "Required string: Action parameter description to be shown in action usage help."
          },
          "group" : {
            "type" : "string",
            "description" : "Optional string: Allows for defining groups of parameters"
          },
          "name" : {
            "type" : "string",
            "description" : "Required string: Action parameter name. This will allow the action to accept CLI options named `--[name]` or `-[name]` for single-letter names. Parameter value can be referenced through ${parameters.[name]} in SpEL template expressions."
          },
          "required" : {
            "type" : "boolean",
            "description" : "Optional boolean: All parameters are required by default, unless this property is set to false."
          },
          "type" : {
            "type" : "string",
            "description" : "Optional string: Action parameter type. Supported types depends on the fcli module (SSC/FoD) from which the action is being run. See built-in actions for examples of supported types."
          },
          "typeParameters" : {
            "$ref" : "#/$defs/Map(String,TemplateExpression)",
            "description" : "Optional map(string,SpEL template expression): Action parameter type parameters to allow for additional configuration of the type converter configured through 'type'."
          }
        },
        "required" : [ "description", "name" ],
        "additionalProperties" : false
      }
    },
    "steps" : {
      "description" : "Required list: Steps to be executed when this action is being run.",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/ActionStep"
      }
    },
    "usage" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string",
          "description" : "Required string: Action usage description, displayed in help output"
        },
        "header" : {
          "type" : "string",
          "description" : "Required string: Action usage header, displayed in list and help outputs"
        }
      },
      "required" : [ "description", "header" ],
      "additionalProperties" : false,
      "description" : "Required object: Action usage help."
    },
    "valueTemplates" : {
      "description" : "Optional list: Value templates used to format data.",
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "contents" : {
            "additionalProperties" : true,
            "type" : [ "object", "string" ],
            "description" : "Required object|string: Text or structured JSON contents, where each text node is assumed to be a template expression."
          },
          "name" : {
            "type" : "string",
            "description" : "Required string: Name of this value template."
          }
        },
        "required" : [ "contents", "name" ],
        "additionalProperties" : false
      }
    }
  },
  "required" : [ "author", "steps", "usage" ],
  "description" : "Fortify CLI action definition",
  "additionalProperties" : false
}