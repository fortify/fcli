# fcli sc-sast
fcli.sc-sast.usage.header = Commands for interacting with Fortify ScanCentral SAST

# SSCApplicationVersionResolver
ApplicationVersionMixin = Application version id or <application>:<version> name.

# fcli sc-sast session
fcli.sc-sast.session.usage.header = Login, logout and manage Fortify ScanCentral SAST sessions
# Shared login options
ssc-user.0 = SSC user name
ssc-user.1 = Environment variables:%n ${fcli.env.default.prefix}_SSC_USER: Shared with SSC/SC DAST%n ${fcli.env.default.prefix}_SC_SAST_SSC_USER: Only SC SAST commands
ssc-password.0 = SSC password
ssc-password.1 = Environment variables:%n ${fcli.env.default.prefix}_SSC_PASSWORD: Shared with SSC/SC DAST%n ${fcli.env.default.prefix}_SC_SAST_SSC_PASSWORD: Only SC SAST commands
ssc-ci-token.0 = SSC CIToken in either encoded or decoded format
ssc-ci-token.1 = Environment variables:%n ${fcli.env.default.prefix}_SSC_CI_TOKEN: Shared with SSC/SC DAST%n ${fcli.env.default.prefix}_SC_SAST_SSC_CI_TOKEN: Only SC SAST commands
client-auth-token.0 = ScanCentral SAST client_auth_token (shared secret) matching the client_auth_token property in ScanCentral SAST Controller config.properties file. This is @|bold,underline not|@ an SSC token.
client-auth-token.1 = Environment variables:%n ${fcli.env.default.prefix}_SC_SAST_CLIENT_AUTH_TOKEN

# fcli sc-sast session login
fcli.sc-sast.session.login.usage.header = Create a session for interacting with Fortify ScanCentral SAST
fcli.sc-sast.session.login.usage.description = For interactive use, you may choose to keep the session open until it expires.%n%nFor CI/CD integrations and other automations:%nYou should always issue a logout command once work is complete.%nOn shared/non-containerized systems, consider setting FORTIFY_HOME or FCLI_HOME variables to prevent unexpected interactions between different pipelines.%nOption values are commonly configured through environment variables as listed in each option description. For more information, see https://fortify-ps.github.io/fcli/#environment-variables.
fcli.sc-sast.session.login.expire-in = Specify for how long the session should remain active, for example 1h (1 hour) or 1d (1 day)
fcli.sc-sast.session.login.ssc-url.0 = SSC URL
fcli.sc-sast.session.login.ssc-url.1 = Environment variables:%n ${fcli.env.default.prefix}_SSC_URL: Shared with SSC/SC DAST%n ${fcli.env.default.prefix}_SC_SAST_SSC_URL: Only SC SAST commands

# fcli sc-sast session logout
fcli.sc-sast.session.logout.usage.header = Terminate Fortify ScanCentral SAST session
fcli.sc-sast.session.logout.usage.description = For CI/CD integrations, option values are commonly configured through the environment variables listed in each option description. For more information, see https://fortify-ps.github.io/fcli/#environment-variables.
fcli.sc-sast.session.logout.no-revoke-token = Don't revoke the UnifiedLoginToken that was generated when logging in with username and password

# fcli sc-sast session list
fcli.sc-sast.session.list.usage.header = List active and expired Fortify ScanCentral SAST sessions
# Re-uses generic options

# fcli sc-sast rest
fcli.sc-sast.rest.usage.header = Low-level commands for direct interaction with Fortify ScanCentral SAST Controller REST API endpoints

# fcli sc-sast rest call
fcli.sc-sast.rest.call.usage.header = Call an individual Fortify ScanCentral SAST Controller REST API endpoint 
# Re-uses generic options

fcli.sc-sast.scan.usage.header = Commands for managing ScanCentral SAST scans
fcli.sc-sast.scan.cancel.usage.header = Cancel a previously submitted scan request
fcli.sc-sast.scan.start.usage.header = Start a ScanCentral SAST scan
fcli.sc-sast.scan.start.mbs.heading = Options for scanning an MBS file:%n
fcli.sc-sast.scan.start.package.heading = Options for scanning a package file:%n
fcli.sc-sast.scan.start.mbs-file = MBS file to scan
fcli.sc-sast.scan.start.package-file = Package file to scan
fcli.sc-sast.scan.start.notify = Email address to which to send a scan completion notification
fcli.sc-sast.scan.start.no-upload = By default, scan results will be automatically uploaded to SSC, unless the --no-upload option is provided
fcli.sc-sast.scan.start.sensor-version = Version of the sensor on which the package should be scanned. Officially, you should select the same sensor version as the version of the ScanCentral Client used to create the package.
fcli.sc-sast.scan.status.usage.header = Get status for a previously submitted scan request
fcli.sc-sast.scan.wait-for.usage.header = Wait for one or more scans to reach or exit specified scan statuses
fcli.sc-sast.scan.wait-for.usage.description.0 = Although this command offers a lot of options to cover many different use cases, to just wait for completion of a single scan that was started using the "--store '?'" option, you can simply run "fcli sc-sast scan wait-for '?'".
fcli.sc-sast.scan.wait-for.usage.description.1 = %nIf none of the --while or --until options are specified, this command will by default wait until the scan has completed, until the SSC upload has completed, or until the scan has been fully processed by SSC, depending on the --status-type option. If any error state or unknown state is detected, an exception will be thrown.
fcli.sc-sast.scan.wait-for.usage.description.2 = %nThe following states are currently known by fcli:
fcli.sc-sast.scan.wait-for.usage.description.3 = If --status-type is set to 'scan' or 'upload': ${fcli.sc-sast.scan.jobStates:-See fcli help output}
fcli.sc-sast.scan.wait-for.usage.description.4 = If --status-type is set to 'processing': ${fcli.sc-sast.scan.jobArtifactStates:-See fcli help output} 
fcli.sc-sast.scan.wait-for.status-type = Specify what status type to wait for. Can be one of 'scan' (wait for scan status), 'upload' (wait for SSC upload status), or 'processing' (wait for SSC artifact processing status). Default value is 'processing', but note that this is only supported on ScanCentral SAST Controller 22.1+. For older versions, either 'scan' or 'upload' must be specified.

#################################################################################################################
# The following section lists human-readable header names used by table and tree output formats;
# values may be internationalized. These messages may be prefixed with full or partial command
# prefix. Closest match wins if there are multiple definitions for the same column name, allowing
# subcommands to override header names defined on parent commands
#################################################################################################################
fcli.sc-sast.scan.output.header.sscArtifactState = Ssc processing state


#################################################################################################################
# The following are technical properties that shouldn't be internationalized ####################################
#################################################################################################################

# Property default values that are usually set when running fcli, but which may not be available when 
# generating AsciiDoc man-pages.
fcli.env.default.prefix=FCLI_DEFAULT

# Table output columns configuration
fcli.sc-sast.scan.output.table.options = jobToken,hasFiles,scanState,scaProgress,sscUploadState,sscArtifactState,endpointVersion
