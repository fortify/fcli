# Error messages:
error.missing.subcommand = Missing required subcommand
error.missing.parameter = Missing required parameter:
error.missing.option = Missing required option
error.unmatched.argument = Unmatched argument at index
error.unmatched.command = Did you mean

# Generic help text elements
usage.footer = %n(c) Copyright 2021 Micro Focus
usage.optionListHeading = %nCommand options:%n
fcli.usage.optionListHeading = %n

arggroup.loggingAndHelp.heading = Logging and help options:%n

# Generic option descriptions
help = Show this help message and exit
version = Print version information and exit

# Descriptions for logging options as defined in LoggingMixin class
log-level = Set logging level. Note that DEBUG and TRACE levels may result in sensitive data being written to the log file. Allowed values: ${COMPLETION-CANDIDATES}
log-file = File where logging data will be written. If not specified, no logging data will be written.

# Output mixin class
arggroup.output.heading = Output options:%n
output = Output format: ${COMPLETION-CANDIDATES}. The 'json-properties' format ignores any options. The 'expr' output format takes a string containing '{<propertyPath>}' placeholders, other output formats take an optional, comma-separated list of property paths. Use '-o json-properties' on the current command to see available '<prop>' values.
output-to-file = Write results to the specified files in the given output format. By default, results will be written to stdout
store = Store the JSON results of this command in a variable. Variables can be managed through the 'fcli config variable' command, and can be referenced using {?variableName:property} on any subsequent command. Most commands that return a single record (get, start, create, ...) also support '?' to store the record identifier in a predefined variable, which can later be referenced using '?' on options/parameters that take the id of such records as input. 

arggroup.query.heading = Query options:%n
query = Return records that match the given query. <prop> specifies the property path against which the given value should be matched; use the '-o json-properties' option on the current command to see available properties. <op> specifies the operator; currently only '=' is supported.

# Help text elements for FCLIRootCommands
fcli.usage.description = Command-line interface for working with various Fortify products

# REST command options mixin
api.uri = The uri to the REST API function that you want to invoke
request = HTTP request type. (eg: GET, POST, PUT, DELETE)
data = This option will read data from a file for your request.

# WaitHelperControlOptions
on-unknown-state-requested=Action to take when an unknown state is passed in any of the --while or --until options: ${COMPLETION-CANDIDATES}
on-failure-state=Action to take when a failure state is returned for any of the records: ${COMPLETION-CANDIDATES}
on-unknown-state=Action to take when an unknown state is returned for any of the records: ${COMPLETION-CANDIDATES}
on-timeout=Action to take when timeout occurs: ${COMPLETION-CANDIDATES}
interval=Polling interval, for example 5s (5 seconds) or 1m (1 minute)
timeout=Time-out, for example 30s (30 seconds), 5m (5 minutes), 1h (1 hour)

# WaitHelperWaitOptions
while-all=Wait while all records match any of the given states
while-any=Wait while any records match any of the given states
until-all=Wait until all records match any of the given states
until-any=Wait until any of the records match any of the given states

# Login and connection options
arggroup.optional.session-name.heading = Session options:%n
session-name[0] = Name for this session
session = Session name to use
url = Full url to the remote system
proxy-host = Hostname or IP address of the proxy server
proxy-port = Port number used to connect to the proxy server
proxy-user = Username used to authenticate with the proxy server
proxy-password = Password used to authenticate with the proxy server
k = Disable SSL checks.

